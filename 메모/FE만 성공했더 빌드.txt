cd "C:\Users\ppssj\Documents\해커톤\FE\my-app"
npm install
npm run build

# 서버로 빌드 업로드
scp -i "C:\Users\ppssj\Documents\H_KEY.pem" -r .\build\* ec2-user@43.203.207.57:/tmp/build/


# EC2 접속
ssh -i "C:\Users\ppssj\Documents\H_KEY.pem" ec2-user@43.203.207.57

# 1) 사용자 정의 네트워크 생성 (이미 있으면 에러 무시)
sudo docker network create app-net 2>/dev/null || true

# 2) 백엔드(hackathon-app)를 해당 네트워크에 연결
sudo docker network connect app-net hackathon-app 2>/dev/null || true

# (참고) DB도 같은 네트워크에 연결할 수 있어요. 필요하면:
# sudo docker network connect app-net hackathon-db 2>/dev/null || true

# 혹시 남아있다면 정리
sudo docker rm -f hackathon-nginx 2>/dev/null || true

# 새 nginx 컨테이너: 80 포트 공개 + app-net 네트워크에 붙이기
sudo docker run -d --name hackathon-nginx --network app-net -p 80:80 nginx:1.27-alpine

# 컨테이너 내부 정적 디렉토리 비우고 새 빌드 복사
sudo docker exec hackathon-nginx sh -c 'rm -rf /usr/share/nginx/html/*'
sudo docker cp /tmp/build/. hackathon-nginx:/usr/share/nginx/html/

# 권한(404 방지)
sudo docker exec hackathon-nginx sh -c 'find /usr/share/nginx/html -type d -exec chmod 755 {} \; && find /usr/share/nginx/html -type f -exec chmod 644 {} \;'



cat >/tmp/app.conf <<'NGX'
server {
    listen 80 default_server;
    server_name _;

    root /usr/share/nginx/html;
    index index.html;

    add_header X-Served-By "hackathon-nginx" always;

    # 정적 캐시 (선택)
    location ~* \.(js|css|png|jpg|jpeg|gif|svg|ico|woff2?)$ {
        add_header Cache-Control "public, max-age=31536000, immutable";
        try_files $uri =404;
    }

    # ✅ API 프록시: 프론트는 /api/로 호출, 백엔드는 / 없이 받는다 → 접두어 제거
    location /api/ {
        proxy_pass http://hackathon-app:8080/;   # 마지막 '/'로 /api/ 접두어를 제거!
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 5s;
        proxy_read_timeout 60s;
        proxy_send_timeout 60s;
        client_max_body_size 50m;
    }

    # React SPA 라우팅
    location / {
        try_files $uri $uri/ /index.html;
    }
}
NGX

sudo docker cp /tmp/app.conf hackathon-nginx:/etc/nginx/conf.d/app.conf
sudo docker exec hackathon-nginx sh -c 'nginx -t && nginx -s reload'


# 컨테이너 내부에서 루트 확인
sudo docker exec hackathon-nginx sh -c 'wget -S -qO- http://127.0.0.1/ | head -n 5'

# 컨테이너 내부에서 API 프록시도 확인(실제 존재하는 엔드포인트로)
sudo docker exec hackathon-nginx sh -c 'wget -S -qO- http://127.0.0.1/api/seller/1 | head -n 5' || true

# 호스트(EC2) 바깥에서 확인 (내 PC PowerShell)
# X-Served-By 헤더가 나오면 우리가 띄운 컨테이너가 응답 중
curl.exe -I http://43.203.207.57/

